openapi: 3.1.0
info:
  title: Magaya DFP Portal API
  version: '4.0'
  license:
    name: Proprietary
  contact:
    name: Magaya
    email: support@qwyk.o
  description: ''
servers:
  - url: 'https://api.qwykportals.com/api/portals'
    description: Production
  - url: 'https://api.next.qwykportals.com/api/portals'
    description: Staging
  - url: 'https://api.beta.qwykportals.com/api/portals'
    description: Beta
paths:
  /auth/login:
    post:
      summary: Log in
      operationId: post-auth-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                  expires_in:
                    type: integer
                x-examples:
                  example-1:
                    access_token: string
                    token_type: string
                    expires_in: 0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: Unauthenticated
        '403':
          description: |-
            Forbidden
            Valid credentials but not able to continue, check response body `type` and `message` for a reason.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - email-unconfirmed
                      - account-unconfirmed
                      - not-allowed-on-site
                    description: |-
                      Reasons: 
                      * email-unconfirmed: the user has not yet confirmed their email address.
                      * account-unconfirmed: an administrator has not yet approved the account for access.
                      * not-allowed-on-site: the user is not authorized to access the Site belonging to the `site_id` that was provided 
                  message:
                    type: string
        '412':
          description: 'Precondition Failed: the account retrieved from Magaya does not match the DFP requirements and needs to be upgraded. Use the value of the X-Upgrade-With header to post additional information before trying to authenticate again. The type indicates the reason for the upgrade.'
          headers:
            X-Upgrade-With:
              schema:
                type: string
              description: 'URL to use when upgrading the user account '
            Access-Control-Expose-Headers:
              schema:
                type: string
                default: X-Upgrade-With
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - account-upgrade-required
                      - email-unknown
                    description: |-
                      Reasons:
                      * account-upgrade-required: The account found belongs to a company and not an individual, the account needs to be upgraded to a contact account.
                      * email-unknown: The user was found but does not have an email, it needs to be provided.
                  message:
                    type: string
      tags:
        - Authentication
      security: []
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      description: ''
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Accept
  /invoice/invoices:
    get:
      summary: Index
      tags:
        - Invoice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  links:
                    $ref: ./PaginationLinks.yaml
                  meta:
                    $ref: ./PaginationMeta.yaml
        '403':
          $ref: '#/components/responses/403'
      operationId: get-invoice-invoices
      x-internal: false
      parameters:
        - schema:
            type: integer
            minimum: 1
            example: 1
          in: query
          name: page
        - schema:
            type: integer
            example: 25
            minimum: 1
          in: query
          name: page_size
        - schema:
            type: string
            format: date-time
          in: query
          name: 'created_at_range[]'
          description: 2 dates in array format
        - schema:
            type: string
          in: query
          name: number
        - schema:
            type: integer
          in: query
          name: 'status[]'
        - schema:
            type: integer
          in: query
          name: 'approval_status[]'
        - schema:
            type: string
            default: created_at
            enum:
              - created_at
              - number
              - status
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
        - schema:
            type: string
            format: date-time
          in: query
          name: 'due_at_range[]'
          description: 2 dates in array format
        - schema:
            type: boolean
          in: query
          name: overdue
          description: 'true = overdue, false = not overdue, null/not present = all'
        - schema:
            type: integer
            enum:
              - 0
              - 1
          in: query
          name: type
  '/invoice/invoices/{invoiceId}':
    get:
      summary: Show
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Invoice'
              examples: {}
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: 'get-api-portals-warehouse-receipts-:id'
      x-internal: false
      tags:
        - Invoice
    parameters:
      - $ref: '#/components/parameters/invoiceId'
  '/invoice/invoices/{invoiceId}/attachments':
    parameters:
      - $ref: '#/components/parameters/invoiceId'
    get:
      summary: Attachments Index
      responses:
        '200':
          $ref: '#/components/responses/Attachments-List'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            enum:
              - created_at
              - updated_at
            default: created_a
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
      description: ''
      tags:
        - Invoice
      x-internal: false
    post:
      summary: Attachment Create
      operationId: post-warehouse-warehouse-receipts-warehouseReceiptId-attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attachment'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |-
                    Allows: pdf,docx,doc,xlsx,xls,csv,txt,png,jpg,jpeg

                    Max: 2048kb
                description:
                  type: string
                  maxLength: 191
              required:
                - file
                - description
      description: ''
      tags:
        - Invoice
      x-internal: true
  '/invoice/invoices/{invoiceId}/charges':
    parameters:
      - $ref: '#/components/parameters/invoiceId'
    get:
      summary: Charges Index
      responses:
        '200':
          $ref: '#/components/responses/Charges-List'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-charges
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            default: service
            enum:
              - quantity
              - service
              - price_amount
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
      description: ''
      x-internal: false
      tags:
        - Invoice
  '/invoice/invoices/{invoiceId}/events':
    parameters:
      - $ref: '#/components/parameters/invoiceId'
    get:
      summary: Events Index
      responses:
        '200':
          $ref: '#/components/responses/Events-List'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            default: date
            enum:
              - created_at
              - updated_at
              - date
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
      tags:
        - Invoice
      x-internal: false
  '/invoice/invoices/{invoiceId}/related-transactions':
    parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Related Transactions Index
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoicableTransaction'
                  links:
                    $ref: ./PaginationLinks.yaml
                  meta:
                    $ref: ./PaginationMeta.yaml
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '':
          description: ''
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
      tags:
        - Invoice
      x-internal: true
  /warehouse/warehouse-receipts:
    get:
      summary: Index
      tags:
        - Warehouse Receipt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WarehouseReceipt'
                  links:
                    $ref: ./PaginationLinks.yaml
                  meta:
                    $ref: ./PaginationMeta.yaml
        '403':
          $ref: '#/components/responses/403'
      operationId: get-api-portals-warehouse-receipts
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            minimum: 1
            default: 1
          in: query
          name: page
        - schema:
            type: string
            default: created_at
            enum:
              - created_at
              - updated_at
              - status
              - number
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
        - schema:
            type: integer
          in: query
          name: 'status[]'
          description: An array of status integers to filter by
        - schema:
            type: string
          in: query
          name: number
        - schema:
            type: string
            format: date-time
          in: query
          name: 'created_at_range[]'
          description: 2 dates in array format
    parameters: []
  '/warehouse/warehouse-receipts/{warehouseReceiptId}':
    get:
      summary: Show
      tags:
        - Warehouse Receipt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WarehouseReceipt'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: 'get-api-portals-warehouse-receipts-:id'
      x-internal: false
    parameters:
      - $ref: '#/components/parameters/warehouseReceiptId'
  '/warehouse/warehouse-receipts/{warehouseReceiptId}/attachments':
    parameters:
      - $ref: '#/components/parameters/warehouseReceiptId'
    get:
      summary: Attachments Index
      tags:
        - Warehouse Receipt
      responses:
        '200':
          $ref: '#/components/responses/Attachments-List'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            enum:
              - created_at
              - updated_at
            default: created_a
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
      description: ''
    post:
      summary: Attachment Create
      operationId: post-warehouse-warehouse-receipts-warehouseReceiptId-attachments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Attachment'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |-
                    Allows: pdf,docx,doc,xlsx,xls,csv,txt,png,jpg,jpeg

                    Max: 2048kb
                description:
                  type: string
                  maxLength: 191
              required:
                - file
                - description
      description: ''
      tags:
        - Warehouse Receipt
  '/warehouse/warehouse-receipts/{warehouseReceiptId}/cargo-items':
    parameters:
      - $ref: '#/components/parameters/warehouseReceiptId'
    get:
      summary: Cargo Items Index
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CargoItem'
                  links:
                    $ref: ./PaginationLinks.yaml
                  meta:
                    $ref: ./PaginationMeta.yaml
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            enum:
              - status
              - quantity
            default: status
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          in: query
          name: order_by_direction
      tags:
        - Warehouse Receipt
  '/warehouse/warehouse-receipts/{warehouseReceiptId}/charges':
    parameters:
      - $ref: '#/components/parameters/warehouseReceiptId'
    get:
      summary: Charges Index
      tags:
        - Warehouse Receipt
      responses:
        '200':
          $ref: '#/components/responses/Charges-List'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-charges
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            default: service
            enum:
              - quantity
              - service
              - price_amount
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
      description: ''
      x-internal: false
  '/warehouse/warehouse-receipts/{warehouseReceiptId}/entities':
    parameters:
      - $ref: '#/components/parameters/warehouseReceiptId'
    get:
      summary: Entities Index
      tags:
        - Warehouse Receipt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Entity'
                  links:
                    $ref: ./PaginationLinks.yaml
                  meta:
                    $ref: ./PaginationMeta.yaml
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            default: name
            enum:
              - name
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          in: query
          name: order_by_direction
  '/warehouse/warehouse-receipts/{warehouseReceiptId}/events':
    parameters:
      - $ref: '#/components/parameters/warehouseReceiptId'
    get:
      summary: Events Index
      tags:
        - Warehouse Receipt
      responses:
        '200':
          $ref: '#/components/responses/Events-List'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-api-portals-warehouse-receipts-id-cargo-items
      parameters:
        - schema:
            type: integer
            minimum: 1
            default: 25
          in: query
          name: page_size
        - schema:
            type: integer
            default: 1
            minimum: 1
          in: query
          name: page
        - schema:
            type: string
            default: date
            enum:
              - created_at
              - updated_at
              - date
          in: query
          name: order_by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: order_by_direction
  '/common/attachments/{attachmentId}/link':
    parameters:
      - schema:
          type: string
          format: uuid
        name: attachmentId
        in: path
        required: true
        description: The UUID of the attachment
    get:
      summary: Attachment Download Link
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        format: uri
                      valid_until:
                        type: string
                        description: Timestamp until when the link is valid
                        format: date-time
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-shared-attachments-attachmentId
      description: Returns a Attachment's signed URL which can be used to download the file.
      tags:
        - Common
components:
  schemas:
    Invoice:
      title: Invoice
      type: object
      description: ''
      x-internal: false
      properties:
        id:
          type: string
          format: uuid
        number:
          type: string
          example: INV-12345
        applies_to:
          $ref: '#/components/schemas/Customer'
        type:
          type: integer
          minimum: 0
          maximum: 1
        type_name:
          type: string
          enum:
            - invoice
            - credit_note
        status:
          type: integer
          minimum: 0
          maximum: 1
        status_name:
          type: string
          enum:
            - open
            - paid
        approval_status:
          type: integer
          minimum: 0
          maximum: 2
        approval_status_name:
          type: string
          enum:
            - none
            - approved
            - disputed
        description:
          type: string
        total:
          $ref: '#/components/schemas/Price'
        paid:
          $ref: '#/components/schemas/Price'
        due:
          $ref: '#/components/schemas/Price'
        payment_terms:
          type:
            - string
            - 'null'
        account:
          type:
            - string
            - 'null'
        division:
          type:
            - string
            - 'null'
        notes:
          type:
            - string
            - 'null'
        created_at:
          type: string
          format: date-time
        due_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type:
            - string
            - 'null'
          format: date-time
    WarehouseReceipt:
      title: WarehouseReceipt
      type: object
      examples: []
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        organization_id:
          type: integer
          readOnly: true
        number:
          type: string
        status:
          type: integer
          minimum: 0
          maximum: 8
        status_name:
          type: string
          enum:
            - on-hand
            - in-progress
            - loaded
            - in-transit
            - at-destination
            - delivered
            - empty
            - arriving
            - pending
        warehouse:
          type: string
        shipper_name:
          type: string
        consignee_name:
          type: string
        supplier_name:
          type: string
        destination_agent_name:
          type: string
        driver_name:
          type: string
        carrier_pro_number:
          type: string
        carrier_tracking_number:
          type: string
        driver_license_number:
          type: string
        supplier_po_number:
          type: string
        notes:
          type: string
        attachments_count:
          type: integer
        total_items:
          type: integer
        total_pieces:
          type: integer
        total_weight:
          $ref: '#/components/schemas/MultiUnitValue'
        total_volume:
          $ref: '#/components/schemas/MultiUnitValue'
        is_on_hold:
          type: boolean
        created_by:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - organization_id
        - number
        - status
        - status_name
        - is_on_hold
        - created_at
        - updated_at
    Payment:
      title: Payment
      type: object
      properties:
        id:
          type: string
      x-internal: true
    Attachment:
      title: Attachment
      type: object
      properties:
        id:
          type: string
          format: uuid
        parent_type:
          type: string
          enum:
            - warehouse-receipt
            - invoice
        parent_id:
          type: string
          format: uuid
        filename:
          type: string
        description:
          type: string
        mime_type:
          type: string
        extension:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - parent_type
        - parent_id
    CargoItem:
      title: CargoItem
      type: object
      properties:
        id:
          type: string
          format: uuid
        parent_type:
          type: string
          enum:
            - warehouse-receipt
        parent_id:
          type: string
          format: uuid
        status:
          type: integer
          minimum: 0
          maximum: 14
        status_name:
          type: string
          enum:
            - on-hand
            - in-progress
            - loaded
            - in-transit
            - at-destination
            - delivered
            - arriving
            - in-quote
            - available
            - booked
            - processed
            - pending
            - ordered
            - back-ordered
            - canceled
        type_code:
          type: integer
        count:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 2
        package_name:
          type: string
          example: Pallet
        description:
          type: string
          example: 'Widgets, Non Haz'
        part_number:
          type:
            - string
            - 'null'
        serial_number:
          type:
            - string
            - 'null'
        location:
          type: string
          example: '210388'
        weight:
          $ref: '#/components/schemas/UnitValue'
        volume:
          $ref: '#/components/schemas/UnitValue'
        total_value:
          $ref: '#/components/schemas/Price'
        is_child:
          type: boolean
        is_kit:
          type: boolean
        is_container:
          type: boolean
        is_really_a_container:
          type: boolean
        is_vehicle:
          type: boolean
        is_on_hold:
          type: boolean
      required:
        - id
        - parent_type
        - parent_id
    Charge:
      title: Charge
      type: object
      x-internal: false
      description: ''
      properties:
        id:
          type: string
          format: uuid
        parent_type:
          type: string
          enum:
            - warehouse-receipt
            - invoice
        parent_id:
          type: string
          format: uuid
        type:
          type: integer
        service:
          type: string
          example: Ocean Freight Service
        description:
          type:
            - string
            - 'null'
        quantity:
          type: number
          example: 5
        price:
          $ref: '#/components/schemas/Price'
        tax_percentage:
          type: number
        retention:
          type: number
        notes:
          type:
            - string
            - 'null'
        is_voided:
          type: boolean
        is_prepaid:
          type: boolean
      required:
        - id
        - parent_type
        - parent_id
        - type
        - service
    Entity:
      title: Entity
      type: object
      properties:
        entity_type:
          type: string
          enum:
            - ams_notify_party_1
            - ams_notify_party_2
            - billing_client
            - billing_client_invoice
            - consignee
            - delivery_entity
            - destination_pickup_entity
            - intermediate_consignee
            - issued_by
            - notify_party
            - online_creator
            - release_to
            - shipper
            - supplier
            - undefined
            - pickup_entity
            - main_carrier
        parent_type:
          type: string
          enum:
            - warehouse-receipt
        parent_id:
          type: string
          format: uuid
        magaya_customer:
          $ref: '#/components/schemas/MagayaCustomer'
      required:
        - entity_type
        - parent_type
        - parent_id
        - magaya_customer
    Event:
      title: Event
      type: object
      properties:
        id:
          type: string
          format: uuid
        parent_type:
          type: string
          enum:
            - warehouse-receipt
            - invoice
        parent_id:
          type: string
          format: uuid
        name:
          type: string
          example: Arrived at Warehouse
        event:
          type: string
          example: Warehouse took delivery
        location_name:
          type: string
          example: 'Miami, FL'
        date:
          type: string
          format: date-time
      required:
        - id
        - parent_type
        - parent_id
    UnitValue:
      title: UnitValue
      type: object
      x-internal: false
      properties:
        value:
          type: number
          example: 100
        unit:
          type: string
    MagayaCustomer:
      title: MagayaCustomer
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Magaya Corporation
          readOnly: true
        street1:
          type: string
          example: 7950 NW 53rd Street
        state:
          type: string
          example: FL
        city:
          type: string
          example: Miami
        postalcode:
          type: string
          example: '33166'
        country:
          type: string
          example: United States
      required:
        - id
    MultiUnitValue:
      title: MultiUnitValue
      type: object
      properties:
        imperial:
          $ref: '#/components/schemas/UnitValue'
        metric:
          $ref: '#/components/schemas/UnitValue'
    Price:
      title: Price
      type: object
      properties:
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: USD
        amount:
          type: number
          example: 100.5
    Customer:
      title: Customer
      type: object
      x-internal: false
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    InvoicableTransaction:
      title: InvoicableTransaction
      type: object
      properties:
        transaction_type:
          type: string
          enum:
            - warehouse-receipt
        transaction_id:
          type: string
          format: uuid
      x-internal: false
    LoginMagayaRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        organization_id:
          type: integer
        site_id:
          type: integer
      x-examples:
        example-1:
          username: username
          password: pa$$word
          organization_id: 0
          site_id: 0
      x-internal: true
      title: LoginMagayaRequest
    LoginNativeRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        organization_id:
          type: integer
        site_id:
          type: integer
      x-examples:
        example-1:
          email: user@example.com
          password: pa$$word
          organization_id: 0
          site_id: 0
      x-internal: true
  responses:
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
            required:
              - message
            x-examples:
              example-1:
                message: This action is unauthorized.
          examples:
            example-1:
              value:
                message: This action is unauthorized.
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
            required:
              - message
            x-examples:
              example-1:
                message: 'No query results for model [{model}] {id}'
          examples:
            example-1:
              value:
                message: 'No query results for model [{model}] {id}'
    Attachments-List:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
              links:
                $ref: ./PaginationLinks.yaml
              meta:
                $ref: ./PaginationMeta.yaml
    Charges-List:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Charge'
              links:
                $ref: ./PaginationLinks.yaml
              meta:
                $ref: ./PaginationMeta.yaml
    Events-List:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
              links:
                $ref: ./PaginationLinks.yaml
              meta:
                $ref: ./PaginationMeta.yaml
  securitySchemes:
    Bearer Token:
      type: http
      scheme: bearer
  parameters:
    invoiceId:
      name: invoiceId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    warehouseReceiptId:
      name: warehouseReceiptId
      in: path
      required: true
      schema:
        type: string
        format: uuid
  requestBodies:
    LoginRequest:
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/LoginNativeRequest'
              - $ref: '#/components/schemas/LoginMagayaRequest'
            description: 'Select Native when using a standalone portal, or Magaya when using a portal connectede with Magaya Supply Chain'
security:
  - Bearer Token: []
